buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.kkoma.boot'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencyManagement {
    dependencies {
        dependency("net.logstash.logback:logstash-logback-encoder:6.6")
    }
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // json
    implementation('com.fasterxml.jackson.core:jackson-core:2.13.1')
    implementation('com.fasterxml.jackson.core:jackson-annotations:2.13.1')
    implementation('com.fasterxml.jackson.core:jackson-databind:2.13.1')

    // model mapper & convert
    implementation('org.modelmapper:modelmapper:2.4.5')

    // logger
    implementation('net.logstash.logback:logstash-logback-encoder')

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // JDBC
    implementation 'org.flywaydb:flyway-core:8.4.1'
    runtimeOnly 'com.h2database:h2:1.4.199'

    // utils
    implementation('org.apache.commons:commons-lang3:3.12.0')
    implementation('org.apache.commons:commons-collections4:4.4')

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.8.2')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')

    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor(
            "javax.persistence:javax.persistence-api",
            "javax.annotation:javax.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jpa"
    )
}

sourceSets {
    main {
        java {
            srcDirs = [
                    "$projectDir/src/main/java",
                    "$projectDir/build/generated"
            ]
        }
    }
}

test {
    useJUnitPlatform()
}
